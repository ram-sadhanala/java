=============================
Fraction (2 hr)
=============================
Solve Problem 1 in pandu/Java/supraja_java_hw/Homework3.doc.
-- explain to me on phone, what is happening in the program step-by-step
-- see for yourself if that is true, by looking at the debugger

=============================
Complex numbers (2 hr)
=============================
Fill up missing bits of code in ComplexNumber.java below.

ComplexNumber.java
--------------------
public class ComplexNumber{
	double real;
	double imag;
	public ComplexNumber(){
		// initialize to to 0+0i
	}
	
	public ComplexNumber(double real, double imag){
		// add code here
	}
	
	
	public String toString(){
		// add code here. 
		// See the main function below for the format of the String to be returned.
	}
	
	public double magnitude(){
		// add code here. magnitude = sqrt(real^2 + imag^2). 
		// Example: for 3+4i, magnitude=5.
		
	}	

}

TestComplexNumber.java
----------------------
public class TestComplexNumber{
	
	public static main(String[] args){
		ComplexNumber c1 = new ComplexNumber();
		ComplexNumber c2 = new ComplexNumber(6,8);
		
		System.out.println("c2 = " + c2.toString());
		System.out.println("magnitude of c2 = " + c2.magnitude());
	}
}

-----------------------
Output should be:
c2 = 6.0 + 8.0i
magnitude of c2 = 10.0


=============================
Swap
=============================
Write a class with main like below

int a = 2;
int b = 5;

// write code here to swap values of a,b
// that is, a should be 5, b should be 2 after your code here.
// don't use values 2,5 directly
// 
// Just writing
// 		a = b; b = a;
// will not work.


=============================
Forex rates (3 hr)
=============================

Purpose: Learning about StringTokenizer and Maps.

Write a class with a main that takes as input a filename where the input file
contains some currency codes and their values in rupees, like this:
USD,66.50
GBP,81.25
EUR,70.6
JPY,0.53
CNY,12.24
INR,1.00

The program then should take in a currency code as input and print out its value.
If the currency code is not present in the list, then it should say that the 
currency is invalid. Take just one currency code as input -- no looping required.

Examples:
Currency: EUR
Value: 70.6

Currency: XXX
Invalid currency code.

Hint: Use a string tokenizer to separate the currency code and the value using a 
comma(",") delimiter.

Hint: Use a HashMap.

=============================
Random numbers (3hr)
=============================

If
	Random r = new Random(); // Random is a Java class. You don't have to write it.
then
	r.nextInt(100) 
returns a random integer from 0 to 99.



See http://programmingbydoing.com/a/randomness.html for an example.


Generate 1000 random integers from 1-5 and count the number of times each 
integer from 1-5 is generated. Then print those counts.

Also print the average of the 1000 numbers generated.

Tip: r.nextInt(5) gives an integer in 0-4. So 1+r.nextInt(5) gives 1-5.
Tip: You can use an array to store the counts of the numbers 1-5.


=============================
Arithmetic, variables (2 days)
=============================
From supraja_java_hw, Homework 4, Problem 1.

Purpose: Writing Classes and using polymorphism.

This is a difficult assignment.


====================
EqualityCheck (1hr)
====================

What is the output if you run the following code.
Write this in Fractions/TestEquals.java.
Try to understand what is going on.

public static main(String[] args){
	
	String s1 = "abcd";
	String s2 = "abcd";
	
	System.out.println(s1==s2);
	System.out.println(s1=="abcd");
	System.out.println(s1.equals(s2));
	
	Fraction f;
	System.out.println(f);
	
	Fraction f1 = new Fraction(3,5);
	Fraction f2 = new Fraction(3,5);
	Fraction f3 = f1;
	System.out.println(f2==f1);
	System.out.println(f3==f1);

	// implement equals method in Fraction and then uncomment the line below
	// System.out.println(f1.equals(f2)); 

}


=============================
GUIs
=============================
Assignments 5, 6, 7 at
https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-092-introduction-to-programming-in-java-january-iap-2010/assignments/

=============================
JDBC (1 wk)
=============================
http://web.cs.wpi.edu/~cs2119/b15/hw6.html
https://courses.cs.washington.edu/courses/csep544/09sp/hw/hw3/hw3.html


====================
Copying an object (2hr)
====================
Part1: Write this in Fractions/TestCopying.java

public static main(String[] args){

	// reference copy
	Fraction f1 = new Fraction(3,5);
	Fraction f2 = f1; 
	// now modify f2
	f2.numerator = 10;
	// Is f1 modified?
	System.out.println(f1); // Is it 3/5 or 10/5?

	// Shallow copy: just the fields of Fraction are copied.
	// Use default clone() from Object.
	// You have to do two things:
	// 1. Make Fraction implement the Cloneable interface
	// 2. Write a public Object clone() in Fraction and just return super.clone()
	//		which invokes Object.clone() which copies field by field.
	Fraction f3 = new Fraction(2,7);
	Fraction f4 = (Fraction) f3.clone();
	f4.numerator = 10;
	// Is f3 modified?
	System.out.println(f3); // Is it 2/7 or 10/7?
		
}

Part2: Write this in CheckingAccountTwo/TestDeepCopying.java

public static main(String[] args){

		// copy stuff from Main.java in CheckingAccountTwo
		
		CheckingAccount laxman = ram; 
		// if you modify any field of laxman, then ram will be modified too
		
		
		// make CheckingAccount Cloneable
		CheckingAccount bharat = (CheckingAccount) ram.clone();
		// Using default Object.clone(), only a shallow copy is performed.
		// bharat.transactions will be set to ram.transactions
		// and so if you modify ram.transactions, then bharat.transactions will be modified too
		ram.makeDeposit(5000,03152017,"paycheck");
		bharat.printTransactions();
		
		// implement your own clone() method now, making sure that the transactions
		// are copied correctly into a different object.		
		CheckingAccount seetha = ram.clone();
		ram.makeDeposit(5000,03152017,"paycheck");
		seetha.printTransactions();
				
}


final keyword
=============================
Exceptions (2 days)
=============================
What, Why?
Handling an Exception, multiple exceptions
Creating and Throwing an Exception


=============================
List files in a given directory (1 hr)
=============================
Write a class with a main which takes a path to a directory as input and prints 
out the list of files in the directory. If the path is not to a directory, then
print an error message.


=============================
Threads and synchronization (1 wk)

A Web Application (2 wk)

OpenweatherMap(1 wk)

Java docs

Open a Git profile and put your projects there. In your resume, 
put a link to the Git profile. They can see your projects, coding style etc.

VIN: 19XFB2F90CE316693


=============================



